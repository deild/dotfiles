#!/usr/bin/env bash

# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.
tre() {
	tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
}

test_color() {

  #
  #   This file echoes a bunch of color codes to the
  #   terminal to demonstrate what's available.  Each
  #   line is the color code of one forground color,
  #   out of 17 (default + 16 escapes), followed by a
  #   test use of that color on all nine background
  #   colors (default + 8 escapes).
  #
  T='gYw';   # The test text
  echo -e "\\n                 40m     41m     42m     43m\
       44m     45m     46m     47m";
  for FGs in '    m' '   1m' '  30m' '1;30m' '  31m' '1;31m' '  32m' \
             '1;32m' '  33m' '1;33m' '  34m' '1;34m' '  35m' '1;35m' \
             '  36m' '1;36m' '  37m' '1;37m';
    do FG=${FGs// /};
    echo -en " $FGs \\033[$FG  $T  ";
    for BG in 40m 41m 42m 43m 44m 45m 46m 47m;
      do echo -en "$EINS \\033[$FG\\033[$BG  $T  \\033[0m";
    done
    echo;
  done
  echo

}

answer_is_yes() {
  [[ "$REPLY" =~ ^[Yy]$ ]] \
    && return 0 \
    || return 1
}

ask_for_confirmation() {
  print_question "$1 (y/n) "
  read -r -n 1
  printf "\\n"
}

cmd_exists() {
  command -v "$1" &> /dev/null
  return $?
}

ask_for_sudo() {
  # Ask for the administrator password upfront.
  sudo -v

  # Update existing `sudo` time stamp
  # until this script has finished.
  #
  # https://gist.github.com/cowboy/3118588
  while true; do
    sleep 60;
    sudo -n true;
    kill -0 "$$" || exit
  done 2>/dev/null &
}

print_error() {
  print_in_red "[✖] $1 $2\\n"
}

print_in_green() {
  printf "\\e[0;32m%s\\e[0m" "$1"
}

print_in_purple() {
  printf "\\e[0;35m%s\\e[0m" "$1"
}

print_in_red() {
  printf "\\e[0;31m%s\\e[0m" "$1"
}

print_in_yellow() {
  printf "\\e[0;33m%s\\e[0m" "$1"
}

print_question() {
  print_in_yellow "[?] $1"
}

print_success() {
  print_in_green "[✔] $1\\n"
}

dirtodmg() {
  dirsrc="$*"
  dest="${dirsrc// /-}"
  hdiutil create -volname "$dest" -srcfolder "./$dirsrc" -ov -format UDBZ -nospotlight "${dest}.dmg"
}

brewup() {
  brew update
  outdated="$(brew outdated)"
  [ -z "$outdated" ] && brew upgrade
  unset outdated
  brew cleanup
  brew prune
}